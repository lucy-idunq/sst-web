[{"D:\\Lucy\\SST\\SST-frontend\\src\\index.js":"1","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqInput.js":"2","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqSelect.js":"3","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Register.js":"4","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqTable.js":"5","D:\\Lucy\\SST\\SST-frontend\\src\\App.js":"6","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Order\\Orders.js":"7","D:\\Lucy\\SST\\SST-frontend\\src\\reportWebVitals.js":"8","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqButton.js":"9","D:\\Lucy\\SST\\SST-frontend\\src\\network\\api.config.js":"10","D:\\Lucy\\SST\\SST-frontend\\src\\network\\registerFetcher.js":"11","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Login.js":"12","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Dashboard\\Dashboard.js":"13","D:\\Lucy\\SST\\SST-frontend\\src\\AppRoute.js":"14","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Items\\Items.js":"15","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\SideBar.js":"16","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\Navigation.js":"17"},{"size":596,"mtime":1606380297946,"results":"18","hashOfConfig":"19"},{"size":798,"mtime":1606460960506,"results":"20","hashOfConfig":"19"},{"size":641,"mtime":1606460994897,"results":"21","hashOfConfig":"19"},{"size":6325,"mtime":1606793440623,"results":"22","hashOfConfig":"19"},{"size":3258,"mtime":1606799353513,"results":"23","hashOfConfig":"19"},{"size":141,"mtime":1606798194014,"results":"24","hashOfConfig":"19"},{"size":1173,"mtime":1606383889867,"results":"25","hashOfConfig":"19"},{"size":375,"mtime":1606185387701,"results":"26","hashOfConfig":"19"},{"size":1036,"mtime":1606444672703,"results":"27","hashOfConfig":"19"},{"size":105,"mtime":1606464190551,"results":"28","hashOfConfig":"19"},{"size":648,"mtime":1606790997680,"results":"29","hashOfConfig":"19"},{"size":4181,"mtime":1606794796097,"results":"30","hashOfConfig":"19"},{"size":148,"mtime":1606793885699,"results":"31","hashOfConfig":"19"},{"size":701,"mtime":1606800131772,"results":"32","hashOfConfig":"19"},{"size":937,"mtime":1606799945144,"results":"33","hashOfConfig":"19"},{"size":1756,"mtime":1606797609967,"results":"34","hashOfConfig":"19"},{"size":730,"mtime":1606800185617,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1165hw3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Lucy\\SST\\SST-frontend\\src\\index.js",[],["75","76"],"D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqInput.js",["77","78","79","80"],"import React, { useState } from 'react';\r\n\r\nconst Input = props => {\r\n    const { id, style, placeholder, type, value, width, className, onChange, pwdViewer } = props\r\n\r\n    const [pwdView, setpwdView] = useState(false)\r\n\r\n    const defaultStyle = {\r\n        boxShadow: 'none',\r\n        // outline:'none',\r\n        // border:'1px solid #eeee',\r\n\r\n    }\r\n\r\n    const userStyle = style === undefined ? {} : style\r\n    return (\r\n        <input\r\n            id={id}\r\n            style={{ ...defaultStyle, ...userStyle }}\r\n            placeholder={placeholder}\r\n            className={`form-control form-rounded ${className}`}\r\n            type={type === undefined ? 'text' : `${type}`}\r\n            onChange={onChange}\r\n            value={value}\r\n\r\n        />\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Input;","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqSelect.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Register.js",["81","82","83"],"import React, { useState } from 'react'\r\nimport { newRegisterData } from '../../network/registerFetcher'\r\nimport DqInput from '../../common/DqInput'\r\nimport DqSelect from '../../common/DqSelect'\r\nimport DqButton from '../../common/DqButton'\r\n\r\nconst Register = props => {\r\n    const [userName, setuserName] = useState('')\r\n    const [phone, setphone] = useState('')\r\n    const [email, setemail] = useState('')\r\n    const [address, setaddress] = useState('')\r\n    const [shopName, setshopName] = useState('')\r\n    const [shopLocation, setshopLocation] = useState('')\r\n    const [latitude, setlatitude] = useState('')\r\n    const [longitude, setlongitude] = useState('')\r\n    const [customerType, setCustomerType] = useState([\r\n        { value: 'wholesale', label: 'Wholesale' },\r\n        { value: 'retail', label: 'Retail' },\r\n    ])\r\n    const [selectedCustomerType, setselectedCustomerType] = useState(null)\r\n    const [password, setpassword] = useState('')\r\n    const [confirmPassword, setconfirmPassword] = useState('')\r\n\r\n  \r\n    const registerSubmit = (e) => {\r\n        e.preventDefault();\r\n        let customerType = selectedCustomerType.value \r\n        \r\n        let info = { userName, phone, email, address, shopName, shopLocation, latitude, longitude, customerType, password, confirmPassword }\r\n        alert(JSON.stringify(info), null, 2)\r\n\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <div className=\"Login d-flex justify-content-center\">\r\n                <div className=\"card login-card \">\r\n                    <div className=\"card-header login-card-header\">\r\n                        <h3>Register</h3>\r\n                    </div>\r\n                    <div className=\"card-body login-body\">\r\n                        <form onSubmit={e => registerSubmit(e)}>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-user\" />\r\n                                <DqInput id='name' placeholder=\"Name\" onChange={(e) => setuserName(e.target.value)} value={userName} value={userName} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-mobile-alt\" />\r\n                                <DqInput id='phone' placeholder=\"Phone\" onChange={(e) => setphone(e.target.value)} value={phone} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-envelope-square\" />\r\n                                <DqInput id='email' placeholder=\"E-mail\" type=\"email\" onChange={(e) => setemail(e.target.value)} value={email} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-address-card\" />\r\n                                <DqInput id='address' placeholder=\"Address\" onChange={(e) => setaddress(e.target.value)} value={address} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-store-alt\" />\r\n                                <DqInput id='shop' placeholder=\"Shop-name\" onChange={(e) => setshopName(e.target.value)} value={shopName} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-location-arrow\" />\r\n                                <DqInput id='shoplocation' placeholder=\"Shop-location\" onChange={(e) => setshopLocation(e.target.value)} value={shopLocation} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-group form-group col-6 pb-2\">\r\n                                    <InputGroupContainer icon=\"fa fa-user\" />\r\n                                    <DqInput id='latitude' placeholder=\"Latitude\" onChange={(e) => setlatitude(e.target.value)} value={latitude} />\r\n                                </div>\r\n                                <div className=\"input-group form-group col-6 pb-2\">\r\n                                    <InputGroupContainer icon=\"fa fa-user\" />\r\n                                    <DqInput id='longitude' placeholder=\"Longitude\" onChange={(e) => setlongitude(e.target.value)} value={longitude} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <DqSelect data={customerType} placeholder=\"Customer Type\" className=\"pb-3\" onChange={(e) => setselectedCustomerType(e)} value={selectedCustomerType} />\r\n\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-key\" />\r\n                                <DqInput id='password' placeholder=\"Password\" type=\"password\" onChange={(e) => setpassword(e.target.value)} value={password} />\r\n                            </div>\r\n\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-key\" />\r\n                                <DqInput id='confirm-password' placeholder=\"Confirm-password\" type=\"password\" onChange={(e) => setconfirmPassword(e.target.value)} value={confirmPassword} />\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <DqButton text=\"Register\" type=\"submit\" />\r\n                                <DqButton text=\"Cancel\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputGroupContainer = ({ icon }) => {\r\n    return (\r\n        <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">\r\n                <i className={icon} />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const customerType = [\r\n//         { value: 'wholesale', label: 'Wholesale' },\r\n//         { value: 'retail', label: 'Retail' },\r\n//     ]\r\n\r\nexport default Register;","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqTable.js",["84"],"D:\\Lucy\\SST\\SST-frontend\\src\\App.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Order\\Orders.js",["85"],"import React from 'react'\r\nimport ph1 from '../../upload/luvph.jpg'\r\nimport DqTable from '../../common/DqTable'\r\n\r\nconst Order = props => {\r\n    return (\r\n        <div>\r\n            <DqTable columns={columns} customData={customData} title={\"Customer Table\"} />\r\n        </div>\r\n    )\r\n}\r\nexport default Order;\r\n\r\nconst columns = [\r\n    { title: 'Profile', field: 'imageUrl', render: rowData => <img src={rowData.imageUrl} style={{width: 40, borderRadius: '50%'}}/> , filtering: false},\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Phone-no', field: 'phoneno', initialEditValue: '-' },\r\n    { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n    {\r\n      title: 'Customer Type',\r\n      field: 'customertype',\r\n      lookup: { 1: 'Wholesale', 2: 'Retailer' },\r\n    },\r\n    { title: 'Address', field: 'address' },\r\n    { title: 'Shop Name', field: 'shopname' },\r\n  ]\r\n  const customData = [\r\n    {  imageUrl: ph1 ,name: 'lucy', phone: '0978987899', shopname: 'Baran', birthYear: 1987, customertype: 1, address: 'ygn' },\r\n    { imageUrl: ph1 , name: 'sumyat', phone: '0978987899', shopname: 'Baran', birthYear: 2017, customertype: 2, address: 'mdy' },\r\n  ]","D:\\Lucy\\SST\\SST-frontend\\src\\reportWebVitals.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqButton.js",["86","87"],"import React, { useState } from 'react'\r\n\r\nconst Button = props => {\r\n    const [isHover, setisHover] = useState(false);\r\n\r\n    const handleHover = () => {\r\n        setisHover(!isHover);\r\n    }\r\n\r\n    const { text, style, onClick, className, height, width, type } = props\r\n\r\n    const defaultStyle = {\r\n        // height: `${height === undefined ? \"100%\" : height}`,\r\n        // width:  `${width === undefined ? \"100%\" : width}`,\r\n        backgroundColor: isHover ? '#dddd' : '#000',\r\n        color: isHover ? '#000' : '#dddd',\r\n        boxShadow: 'none',\r\n        outline: 'none',\r\n    }\r\n\r\n    const userStyle = style === undefined ? {} : style\r\n    return (\r\n        <button\r\n            className={`border btn ${className}`}\r\n            style={{ ...defaultStyle, ...userStyle }}\r\n            type={type === undefined ? 'button' : type}\r\n            onClick={onClick}\r\n            onMouseOver={handleHover}\r\n            onMouseLeave={handleHover}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","D:\\Lucy\\SST\\SST-frontend\\src\\network\\api.config.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\network\\registerFetcher.js",["88"],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Login.js",["89"],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Dashboard\\Dashboard.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\AppRoute.js",["90","91"],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Items\\Items.js",["92","93"],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\SideBar.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\Navigation.js",["94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":50,"nodeType":"101","messageId":"102","endLine":4,"endColumn":55},{"ruleId":"99","severity":1,"message":"103","line":4,"column":78,"nodeType":"101","messageId":"102","endLine":4,"endColumn":87},{"ruleId":"99","severity":1,"message":"104","line":6,"column":12,"nodeType":"101","messageId":"102","endLine":6,"endColumn":19},{"ruleId":"99","severity":1,"message":"105","line":6,"column":21,"nodeType":"101","messageId":"102","endLine":6,"endColumn":31},{"ruleId":"99","severity":1,"message":"106","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":25},{"ruleId":"99","severity":1,"message":"107","line":16,"column":26,"nodeType":"101","messageId":"102","endLine":16,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":45,"column":134,"nodeType":"110","endLine":45,"endColumn":150},{"ruleId":"99","severity":1,"message":"111","line":9,"column":25,"nodeType":"101","messageId":"102","endLine":9,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":15,"column":63,"nodeType":"114","endLine":15,"endColumn":133},{"ruleId":"99","severity":1,"message":"115","line":10,"column":46,"nodeType":"101","messageId":"102","endLine":10,"endColumn":52},{"ruleId":"99","severity":1,"message":"100","line":10,"column":54,"nodeType":"101","messageId":"102","endLine":10,"endColumn":59},{"ruleId":"99","severity":1,"message":"116","line":4,"column":11,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"117","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"118","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"119","severity":2,"message":"120","line":12,"column":44,"nodeType":"101","messageId":"121","endLine":12,"endColumn":54},{"ruleId":"99","severity":1,"message":"122","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":20,"column":61,"nodeType":"114","endLine":20,"endColumn":134},{"ruleId":"99","severity":1,"message":"123","line":8,"column":11,"nodeType":"101","messageId":"102","endLine":8,"endColumn":15},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'width' is assigned a value but never used.","Identifier","unusedVar","'pwdViewer' is assigned a value but never used.","'pwdView' is assigned a value but never used.","'setpwdView' is assigned a value but never used.","'newRegisterData' is defined but never used.","'setCustomerType' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setSelectedRow' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'height' is assigned a value but never used.","'userName' is assigned a value but never used.","'Route' is defined but never used.","'Raect' is defined but never used.","no-undef","'Navigation' is not defined.","undef","'IMG_SERVER' is defined but never used.","'Open' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]