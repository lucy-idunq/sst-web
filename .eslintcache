[{"D:\\Lucy\\SST\\SST-frontend\\src\\index.js":"1","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqInput.js":"2","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqSelect.js":"3","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Register.js":"4","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqTable.js":"5","D:\\Lucy\\SST\\SST-frontend\\src\\App.js":"6","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Order\\Orders.js":"7","D:\\Lucy\\SST\\SST-frontend\\src\\reportWebVitals.js":"8","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqButton.js":"9","D:\\Lucy\\SST\\SST-frontend\\src\\network\\api.config.js":"10","D:\\Lucy\\SST\\SST-frontend\\src\\network\\registerFetcher.js":"11","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Login.js":"12","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Dashboard\\Dashboard.js":"13","D:\\Lucy\\SST\\SST-frontend\\src\\AppRoute.js":"14","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Items\\Items.js":"15","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\SideBar.js":"16","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\Navigation.js":"17","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\NavBar.js":"18"},{"size":596,"mtime":1606380297946,"results":"19","hashOfConfig":"20"},{"size":798,"mtime":1606460960506,"results":"21","hashOfConfig":"20"},{"size":641,"mtime":1606460994897,"results":"22","hashOfConfig":"20"},{"size":6325,"mtime":1606793440623,"results":"23","hashOfConfig":"20"},{"size":3255,"mtime":1606802275160,"results":"24","hashOfConfig":"20"},{"size":255,"mtime":1606805083527,"results":"25","hashOfConfig":"20"},{"size":1173,"mtime":1606383889867,"results":"26","hashOfConfig":"20"},{"size":375,"mtime":1606185387701,"results":"27","hashOfConfig":"20"},{"size":1036,"mtime":1606444672703,"results":"28","hashOfConfig":"20"},{"size":105,"mtime":1606464190551,"results":"29","hashOfConfig":"20"},{"size":648,"mtime":1606790997680,"results":"30","hashOfConfig":"20"},{"size":4176,"mtime":1606800591067,"results":"31","hashOfConfig":"20"},{"size":148,"mtime":1606801986633,"results":"32","hashOfConfig":"20"},{"size":1017,"mtime":1606810726257,"results":"33","hashOfConfig":"20"},{"size":937,"mtime":1606799945144,"results":"34","hashOfConfig":"20"},{"size":1756,"mtime":1606803751037,"results":"35","hashOfConfig":"20"},{"size":896,"mtime":1606807753250,"results":"36","hashOfConfig":"20"},{"size":1311,"mtime":1606810833497,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1165hw3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Lucy\\SST\\SST-frontend\\src\\index.js",[],["83","84"],"D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqInput.js",["85","86","87","88"],"import React, { useState } from 'react';\r\n\r\nconst Input = props => {\r\n    const { id, style, placeholder, type, value, width, className, onChange, pwdViewer } = props\r\n\r\n    const [pwdView, setpwdView] = useState(false)\r\n\r\n    const defaultStyle = {\r\n        boxShadow: 'none',\r\n        // outline:'none',\r\n        // border:'1px solid #eeee',\r\n\r\n    }\r\n\r\n    const userStyle = style === undefined ? {} : style\r\n    return (\r\n        <input\r\n            id={id}\r\n            style={{ ...defaultStyle, ...userStyle }}\r\n            placeholder={placeholder}\r\n            className={`form-control form-rounded ${className}`}\r\n            type={type === undefined ? 'text' : `${type}`}\r\n            onChange={onChange}\r\n            value={value}\r\n\r\n        />\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Input;",["89","90"],"D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqSelect.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Register.js",["91","92","93"],"import React, { useState } from 'react'\r\nimport { newRegisterData } from '../../network/registerFetcher'\r\nimport DqInput from '../../common/DqInput'\r\nimport DqSelect from '../../common/DqSelect'\r\nimport DqButton from '../../common/DqButton'\r\n\r\nconst Register = props => {\r\n    const [userName, setuserName] = useState('')\r\n    const [phone, setphone] = useState('')\r\n    const [email, setemail] = useState('')\r\n    const [address, setaddress] = useState('')\r\n    const [shopName, setshopName] = useState('')\r\n    const [shopLocation, setshopLocation] = useState('')\r\n    const [latitude, setlatitude] = useState('')\r\n    const [longitude, setlongitude] = useState('')\r\n    const [customerType, setCustomerType] = useState([\r\n        { value: 'wholesale', label: 'Wholesale' },\r\n        { value: 'retail', label: 'Retail' },\r\n    ])\r\n    const [selectedCustomerType, setselectedCustomerType] = useState(null)\r\n    const [password, setpassword] = useState('')\r\n    const [confirmPassword, setconfirmPassword] = useState('')\r\n\r\n  \r\n    const registerSubmit = (e) => {\r\n        e.preventDefault();\r\n        let customerType = selectedCustomerType.value \r\n        \r\n        let info = { userName, phone, email, address, shopName, shopLocation, latitude, longitude, customerType, password, confirmPassword }\r\n        alert(JSON.stringify(info), null, 2)\r\n\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <div className=\"Login d-flex justify-content-center\">\r\n                <div className=\"card login-card \">\r\n                    <div className=\"card-header login-card-header\">\r\n                        <h3>Register</h3>\r\n                    </div>\r\n                    <div className=\"card-body login-body\">\r\n                        <form onSubmit={e => registerSubmit(e)}>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-user\" />\r\n                                <DqInput id='name' placeholder=\"Name\" onChange={(e) => setuserName(e.target.value)} value={userName} value={userName} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-mobile-alt\" />\r\n                                <DqInput id='phone' placeholder=\"Phone\" onChange={(e) => setphone(e.target.value)} value={phone} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-envelope-square\" />\r\n                                <DqInput id='email' placeholder=\"E-mail\" type=\"email\" onChange={(e) => setemail(e.target.value)} value={email} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-address-card\" />\r\n                                <DqInput id='address' placeholder=\"Address\" onChange={(e) => setaddress(e.target.value)} value={address} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-store-alt\" />\r\n                                <DqInput id='shop' placeholder=\"Shop-name\" onChange={(e) => setshopName(e.target.value)} value={shopName} />\r\n                            </div>\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fas fa-location-arrow\" />\r\n                                <DqInput id='shoplocation' placeholder=\"Shop-location\" onChange={(e) => setshopLocation(e.target.value)} value={shopLocation} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-group form-group col-6 pb-2\">\r\n                                    <InputGroupContainer icon=\"fa fa-user\" />\r\n                                    <DqInput id='latitude' placeholder=\"Latitude\" onChange={(e) => setlatitude(e.target.value)} value={latitude} />\r\n                                </div>\r\n                                <div className=\"input-group form-group col-6 pb-2\">\r\n                                    <InputGroupContainer icon=\"fa fa-user\" />\r\n                                    <DqInput id='longitude' placeholder=\"Longitude\" onChange={(e) => setlongitude(e.target.value)} value={longitude} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <DqSelect data={customerType} placeholder=\"Customer Type\" className=\"pb-3\" onChange={(e) => setselectedCustomerType(e)} value={selectedCustomerType} />\r\n\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-key\" />\r\n                                <DqInput id='password' placeholder=\"Password\" type=\"password\" onChange={(e) => setpassword(e.target.value)} value={password} />\r\n                            </div>\r\n\r\n                            <div className=\"input-group form-group  pb-2\">\r\n                                <InputGroupContainer icon=\"fa fa-key\" />\r\n                                <DqInput id='confirm-password' placeholder=\"Confirm-password\" type=\"password\" onChange={(e) => setconfirmPassword(e.target.value)} value={confirmPassword} />\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <DqButton text=\"Register\" type=\"submit\" />\r\n                                <DqButton text=\"Cancel\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputGroupContainer = ({ icon }) => {\r\n    return (\r\n        <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">\r\n                <i className={icon} />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const customerType = [\r\n//         { value: 'wholesale', label: 'Wholesale' },\r\n//         { value: 'retail', label: 'Retail' },\r\n//     ]\r\n\r\nexport default Register;","D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqTable.js",["94"],"D:\\Lucy\\SST\\SST-frontend\\src\\App.js",["95"],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Order\\Orders.js",["96"],"import React from 'react'\r\nimport ph1 from '../../upload/luvph.jpg'\r\nimport DqTable from '../../common/DqTable'\r\n\r\nconst Order = props => {\r\n    return (\r\n        <div>\r\n            <DqTable columns={columns} customData={customData} title={\"Customer Table\"} />\r\n        </div>\r\n    )\r\n}\r\nexport default Order;\r\n\r\nconst columns = [\r\n    { title: 'Profile', field: 'imageUrl', render: rowData => <img src={rowData.imageUrl} style={{width: 40, borderRadius: '50%'}}/> , filtering: false},\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Phone-no', field: 'phoneno', initialEditValue: '-' },\r\n    { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n    {\r\n      title: 'Customer Type',\r\n      field: 'customertype',\r\n      lookup: { 1: 'Wholesale', 2: 'Retailer' },\r\n    },\r\n    { title: 'Address', field: 'address' },\r\n    { title: 'Shop Name', field: 'shopname' },\r\n  ]\r\n  const customData = [\r\n    {  imageUrl: ph1 ,name: 'lucy', phone: '0978987899', shopname: 'Baran', birthYear: 1987, customertype: 1, address: 'ygn' },\r\n    { imageUrl: ph1 , name: 'sumyat', phone: '0978987899', shopname: 'Baran', birthYear: 2017, customertype: 2, address: 'mdy' },\r\n  ]","D:\\Lucy\\SST\\SST-frontend\\src\\reportWebVitals.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\common\\DqButton.js",["97","98"],"import React, { useState } from 'react'\r\n\r\nconst Button = props => {\r\n    const [isHover, setisHover] = useState(false);\r\n\r\n    const handleHover = () => {\r\n        setisHover(!isHover);\r\n    }\r\n\r\n    const { text, style, onClick, className, height, width, type } = props\r\n\r\n    const defaultStyle = {\r\n        // height: `${height === undefined ? \"100%\" : height}`,\r\n        // width:  `${width === undefined ? \"100%\" : width}`,\r\n        backgroundColor: isHover ? '#dddd' : '#000',\r\n        color: isHover ? '#000' : '#dddd',\r\n        boxShadow: 'none',\r\n        outline: 'none',\r\n    }\r\n\r\n    const userStyle = style === undefined ? {} : style\r\n    return (\r\n        <button\r\n            className={`border btn ${className}`}\r\n            style={{ ...defaultStyle, ...userStyle }}\r\n            type={type === undefined ? 'button' : type}\r\n            onClick={onClick}\r\n            onMouseOver={handleHover}\r\n            onMouseLeave={handleHover}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","D:\\Lucy\\SST\\SST-frontend\\src\\network\\api.config.js",[],["99","100"],"D:\\Lucy\\SST\\SST-frontend\\src\\network\\registerFetcher.js",["101"],"import { API_URL } from '../network/api.config'\r\n\r\nexport const newRegisterData = (info, callback) => {\r\n    const userName = info.userName\r\n    \r\n    fetch(API_URL + '/register', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        cache: 'no-cache',\r\n        // body: JSON.stringify({  })\r\n\r\n    })\r\n        .then(res => {\r\n            return res.json()\r\n            // if (res.status !== 200) throw res.json()\r\n            // else return res.json()\r\n        })\r\n        .then(data => {\r\n            callback(null, data)\r\n        })\r\n        .catch(error => callback(null, error))\r\n}","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Login\\Login.js",["102"],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Dashboard\\Dashboard.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\AppRoute.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Items\\Items.js",["103","104"],"import React from 'react';\r\nimport { IMG_SERVER } from '../../network/api.config'\r\nimport DqTable from '../../common/DqTable';\r\nimport ph1 from '../../upload/luvph.jpg'\r\n\r\nconst Items = props => {\r\n\r\n    return (\r\n        <div>\r\n            <DqTable customData={customData} columns={columns} title={\"Item List\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Items;\r\nconst columns = [\r\n\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Image', field: 'imageUrl', render: rowData => <img src={rowData.imageUrl} style={{ width: 40, borderRadius: '50%' }} />, filtering: false },\r\n    {\r\n        title: 'Package',\r\n        field: 'packageType',\r\n        lookup: { 1: 'packing', 2: 'small' },\r\n    },\r\n    { title: 'Price', field: 'price', },\r\n\r\n]\r\n\r\n\r\nconst customData = [\r\n    { name: 'Mehmet', packageType: 2, imageUrl: `${ph1}`, price: 1987, },\r\n    { name: 'Zerya Betül', surname: 'Baran', imageUrl: `${ph1}`, price: 2017, },\r\n]","D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\SideBar.js",[],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\Navigation.js",["105"],"D:\\Lucy\\SST\\SST-frontend\\src\\Components\\Navigation\\NavBar.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":50,"nodeType":"112","messageId":"113","endLine":4,"endColumn":55},{"ruleId":"110","severity":1,"message":"114","line":4,"column":78,"nodeType":"112","messageId":"113","endLine":4,"endColumn":87},{"ruleId":"110","severity":1,"message":"115","line":6,"column":12,"nodeType":"112","messageId":"113","endLine":6,"endColumn":19},{"ruleId":"110","severity":1,"message":"116","line":6,"column":21,"nodeType":"112","messageId":"113","endLine":6,"endColumn":31},{"ruleId":"106","replacedBy":"117"},{"ruleId":"108","replacedBy":"118"},{"ruleId":"110","severity":1,"message":"119","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":25},{"ruleId":"110","severity":1,"message":"120","line":16,"column":26,"nodeType":"112","messageId":"113","endLine":16,"endColumn":41},{"ruleId":"121","severity":1,"message":"122","line":45,"column":134,"nodeType":"123","endLine":45,"endColumn":150},{"ruleId":"110","severity":1,"message":"124","line":9,"column":25,"nodeType":"112","messageId":"113","endLine":9,"endColumn":39},{"ruleId":"110","severity":1,"message":"125","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":15,"column":63,"nodeType":"128","endLine":15,"endColumn":133},{"ruleId":"110","severity":1,"message":"129","line":10,"column":46,"nodeType":"112","messageId":"113","endLine":10,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":10,"column":54,"nodeType":"112","messageId":"113","endLine":10,"endColumn":59},{"ruleId":"106","replacedBy":"130"},{"ruleId":"108","replacedBy":"131"},{"ruleId":"110","severity":1,"message":"132","line":4,"column":11,"nodeType":"112","messageId":"113","endLine":4,"endColumn":19},{"ruleId":"110","severity":1,"message":"133","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":15},{"ruleId":"110","severity":1,"message":"134","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":20,"column":61,"nodeType":"128","endLine":20,"endColumn":134},{"ruleId":"110","severity":1,"message":"135","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'width' is assigned a value but never used.","Identifier","unusedVar","'pwdViewer' is assigned a value but never used.","'pwdView' is assigned a value but never used.","'setpwdView' is assigned a value but never used.",["136"],["137"],"'newRegisterData' is defined but never used.","'setCustomerType' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setSelectedRow' is assigned a value but never used.","'Navigation' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'height' is assigned a value but never used.",["136"],["137"],"'userName' is assigned a value but never used.","'Route' is defined but never used.","'IMG_SERVER' is defined but never used.","'AppRoute' is defined but never used.","no-global-assign","no-unsafe-negation"]